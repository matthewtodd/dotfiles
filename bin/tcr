#!/bin/sh

set -euo pipefail

tput reset

emoji=("🍻" "🦖" "🌯" "🍕" "🎸" "🚀" "🦏" "🍩" "🍦")
git commit -m "${emoji[$RANDOM % ${#emoji[@]} ]} $(date '+%A, %B %e')" --allow-empty
commit=$(git rev-parse HEAD)

# Why not just use fswatch's own looping?
# Because we don't want to trigger another cycle on revert.
# It's helpful to leave the bad diff and the test failures on screen.
running=1; trap "running=0" INT

while [ $running -eq 1 ]; do
  fswatch --one-event --latency 0.1 $(git ls-files) | xargs bash -c "
    run() {
      echo \"\$(tput setaf 6)\$*\$(tput sgr0)\"
      eval \$*
      result=\$?
      echo
      return \$result
    }

    tput reset

    run git --no-pager diff

    while IFS= read -r command; do
      if ! run \$command; then
        git reset --hard --quiet
        sleep 5
        exit
      fi
    done < <(git --no-pager config --get-all tcr.command)

    git add -A
    git commit --fixup $commit --allow-empty --quiet
  "
done
