#!/bin/sh

set -euo pipefail

tput reset

emoji=("🍻" "🦖" "🌯" "🍕" "🎸" "🚀" "🦏" "🍩" "🍦")
git commit --message "${emoji[$RANDOM % ${#emoji[@]} ]} $(date '+%A, %B %e')" --allow-empty
commit=$(git rev-parse HEAD)

# Why not just use fswatch's own looping?
# Because we don't want to trigger another cycle on revert.
# It's helpful to leave the bad diff and the test failures on screen.
running=1; trap "running=0" INT

run() {
  echo "$(tput setaf 6)$*$(tput sgr0)"
  eval $*
  echo
}

export -f run

while [ $running -eq 1 ]; do
  fswatch --one-event --latency 0.1 $(git ls-files) | xargs bash -c "
    tput reset
    run git --no-pager diff
    git test

    if [ \$? -eq 0 ]; then
      run git commit --all --fixup $commit --allow-empty
    else
      run git reset --hard
    fi
  "
done
