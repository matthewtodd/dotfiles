# vim: filetype=ruby :

# This way, I can `require 'redgreen' if $stdout.tty? || ENV['AUTOTEST']`
ENV['AUTOTEST'] = 'true'

# Clear the screen before each run. This way, it's visually easier to parse the
# test output, and I don't have to bend my neck so much.
#
# http://en.wikipedia.org/wiki/ANSI_escape_code#Codes
#   \e[2J clears the entire screen
#   \e[H  positions the cursor at 1,1
Autotest.add_hook(:run_command) do
  $stdout.write "\e[2J\e[H"
end

# I just saw autotest-growl on a bddcast(s.com), and it looked pretty.
begin
  require 'autotest/growl'
rescue LoadError
  # Not in this gemset, I guess. No worries.
else
  # It seems to me this clear terminal functionality doesn't belong with growl
  # notifications. Disable it here since I've already taken care of it above.
  Autotest::Growl.clear_terminal = false
  # Autotest::Growl.sticky_failure_notifications = true
end

begin
  require 'autotest/tmux'
rescue LoadError
  # Not in this gemset, I guess. No worries.
end
